{"version":3,"sources":["Details.js","Sidebar.js","TrafficMap.js","helpers/traffic.js","App.js","serviceWorker.js","index.js"],"names":["Details","state","close","props","this","classes","width","traffic_point","fullScreen","isWidthDown","Dialog","disableBackdropClick","open","onClose","aria-labelledby","BackdropProps","invisible","PaperProps","elevation","className","dialog","DialogTitle","id","DialogContent","List","root","ListItem","ListItemText","primary","secondary","road_type","road_name","DialogActions","Button","onClick","color","React","Component","compose","withWidth","withStyles","theme","border","list","maxWidth","backgroundColor","palette","background","paper","withTheme","BootstrapInput","marginTop","spacing","input","borderRadius","position","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","InputBase","Sidebar","componentDidMount","setState","openDetails","info_dialog_open","closeDetails","selected_year","selected_authority","changeYear","changeAuthority","traffic_points","percentages","data_setup","labels","datasets","fade","main","data","all_hgvs","buses_and_coaches","cars_and_taxis","pedal_cycles","Typography","variant","component","gutterBottom","ListSubheader","Divider","FormControl","formControl","InputLabel","htmlFor","Select","value","onChange","e","target","name","MenuItem","authorities","sort","a","b","localeCompare","map","key","getAverageDailyFlow","length","Fragment","height","options","maintainAspectRatio","legend","display","scales","xAxes","ticks","beginAtZero","scaleLabel","labelString","margin","minWidth","Map","ReactMapboxGl","minZoom","maxZoom","scrollZoom","interactive","dragRotate","attributionControl","TrafficMap","zoom","pitch","bearing","fit_bounds","viewPoint","style","center","fitBounds","containerStyle","top","bottom","right","left","type","layout","paint","tp","count_point_id","coordinates","longitude","latitude","properties","mapWithEvt","config","require","getLocalAuthorities","callback","axios","get","cors_proxy","api","headers","origin","then","response","catch","err","getAnnualAverageDailyFlowByAuthorityAndYear","authority","year","coords","forEach","push","bounds","reduce","coord","extend","MapboxGL","sw","getSouthWest","ne","getNorthEast","totals","all_motor_vehicles","two_wheeled_motor_vehicles","Math","round","lng","lat","undefined","createMuiTheme","blue","blueGrey","overrides","MuiButton","text","textTransform","App","distance","current_position","getAuthorities","trafficHelper","feature","auths","CssBaseline","drawer","aria-label","Drawer","drawerPaper","content","toolbar","flexGrow","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6c91c805.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport compose from 'recompose/compose';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\n\r\nimport withWidth, { isWidthDown } from '@material-ui/core/withWidth';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    dialog: {\r\n        border: '1px solid #e5e5e5'\r\n    },\r\n    list: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper\r\n    },\r\n});\r\n\r\nclass Details extends React.Component {\r\n    state = {}\r\n\r\n    close = () => { this.props.close() }\r\n\r\n    render() {\r\n        const { classes, width, traffic_point } = this.props;\r\n        const fullScreen = isWidthDown('sm', width);\r\n        return (\r\n            <Dialog\r\n                fullScreen={fullScreen}\r\n                disableBackdropClick={true}\r\n                open={this.props.open}\r\n                onClose={this.close}\r\n                aria-labelledby=\"responsive-dialog-title\"\r\n                BackdropProps={\r\n                    {\r\n                        invisible: true\r\n                    }\r\n                }\r\n                PaperProps={\r\n                    {\r\n                        elevation: 0,\r\n                        className: classes.dialog\r\n                    }\r\n                }\r\n            >\r\n                <DialogTitle id=\"responsive-dialog-title\">Details</DialogTitle>\r\n                <DialogContent>\r\n                    <List className={classes.root}>\r\n                        <ListItem>\r\n                            <ListItemText primary=\"Road type\" secondary={traffic_point.road_type} />\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <ListItemText primary=\"Road name\" secondary={traffic_point.road_name} />\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <ListItemText primary=\"To do\" secondary=\"Full information about the traffic point\" />\r\n                        </ListItem>\r\n                    </List>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => this.close()} color=\"secondary\">Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nDetails.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default compose(withWidth(), withStyles(styles, { withTheme: true }))(Details);","// React\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n// Material UI\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Chart JS\r\nimport { HorizontalBar } from 'react-chartjs-2';\r\n\r\nconst styles = theme => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n});\r\n\r\nconst BootstrapInput = withStyles(theme => ({\r\n    root: {\r\n        'label + &': {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n    input: {\r\n        borderRadius: 4,\r\n        position: 'relative',\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '1px solid #ced4da',\r\n        fontSize: 16,\r\n        padding: '10px 26px 10px 12px',\r\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n        // Use the system font instead of the default Roboto font.\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(','),\r\n        '&:focus': {\r\n            borderRadius: 4,\r\n            borderColor: '#80bdff',\r\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n        },\r\n    },\r\n}))(InputBase);\r\n\r\nclass Sidebar extends Component {\r\n    state = {\r\n\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.setState({});\r\n    }\r\n\r\n    openDetails = () => this.setState({ info_dialog_open: true })\r\n    closeDetails = () => this.setState({ info_dialog_open: false })\r\n\r\n    render() {\r\n        const { classes, selected_year, selected_authority, changeYear, changeAuthority, traffic_points, theme, percentages } = this.props;\r\n        const data_setup = {\r\n            labels: ['HGVs', 'Buses and coaches', 'Cars and taxis', 'Pedal cycles'],\r\n            datasets: [\r\n                {\r\n                    backgroundColor: fade(theme.palette.primary.main, 0.6),\r\n                    data: [percentages.all_hgvs, percentages.buses_and_coaches, percentages.cars_and_taxis, percentages.pedal_cycles],\r\n                }\r\n            ]\r\n        };\r\n        return (\r\n            <div>\r\n                <Typography variant=\"h5\" component=\"h5\" gutterBottom>Traffic Data</Typography>\r\n                <ListSubheader>Filters: Annual Average Daily Flow By Direction</ListSubheader>\r\n                <Divider />\r\n                <br />\r\n                <Typography variant=\"body2\">Choose a year to see traffic flow data for that year.</Typography>\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel htmlFor=\"sel-year\">Year</InputLabel>\r\n                    <Select\r\n                        value={selected_year}\r\n                        onChange={(e) => changeYear(e.target.value)}\r\n                        input={<BootstrapInput name=\"year\" id=\"sel-year\" />}\r\n                    >\r\n                        <MenuItem value=\"2016\">2016</MenuItem>\r\n                        <MenuItem value=\"2017\">2017</MenuItem>\r\n                        <MenuItem value=\"2018\">2018</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <br />\r\n                <Divider />\r\n                <br />\r\n                <Typography variant=\"body2\">Choose an authority to look at traffic flow data for that area. Map data shown is the tarffic count for all motor vehicles.</Typography>\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel htmlFor=\"sel-authority\">Authority</InputLabel>\r\n                    <Select\r\n                        value={selected_authority}\r\n                        onChange={(e) => changeAuthority(e.target.value)}\r\n                        input={<BootstrapInput name=\"authority\" id=\"sel-authority\" />}\r\n                    >\r\n                        <MenuItem value=\"\">Choose authority</MenuItem>\r\n                        {this.props.authorities.sort((a, b) => { return a.name.localeCompare(b.name) })\r\n                            .map(a => {\r\n                                return <MenuItem key={a.id} value={a.id}>{a.name}</MenuItem>\r\n                            })}\r\n                    </Select>\r\n                </FormControl>\r\n                <br />\r\n                <Divider />\r\n                <br />\r\n                <Typography variant=\"body2\">To do: add vehicle type filters</Typography>\r\n                <Typography variant=\"body2\">To do: add direction filters and map indicators for direction</Typography>\r\n                <Typography variant=\"body2\">To do: check data source paging to ensure all data shown</Typography>\r\n                <br />\r\n                <Button color=\"primary\" variant=\"outlined\" onClick={() => this.props.getAverageDailyFlow()}>Refresh data</Button>\r\n                <br />\r\n                {\r\n                    traffic_points.length > 0 ?\r\n                        <React.Fragment>\r\n                            <ListSubheader>Charts: Annual Average Daily Flow By Direction</ListSubheader>\r\n                            <Divider />\r\n                            <HorizontalBar\r\n                                data={data_setup}\r\n                                height={200}\r\n                                options={{\r\n                                    maintainAspectRatio: true,\r\n                                    legend: {\r\n                                        display: false\r\n                                    },\r\n                                    scales: {\r\n                                        xAxes: [{\r\n                                            ticks: {\r\n                                                beginAtZero: true\r\n                                            },\r\n                                            scaleLabel: {\r\n                                                display: true,\r\n                                                labelString: 'Percentage %'\r\n                                            }\r\n                                        }]\r\n                                    }\r\n                                }}\r\n                            />\r\n                        </React.Fragment> : null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSidebar.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Sidebar);","// React\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Mapbox GL\r\nimport ReactMapboxGl, { ZoomControl, Layer, Feature } from \"react-mapbox-gl\";\r\n\r\nconst Map = ReactMapboxGl({\r\n\tminZoom: 5,\r\n\tmaxZoom: 18,\r\n\tscrollZoom: true,\r\n\tinteractive: true,\r\n\tdragRotate: true,\r\n\tattributionControl: true\r\n});\r\n\r\nclass TrafficMap extends Component {\r\n\r\n\tstate = {\r\n\t}\r\n\r\n\tcomponentDidMount = () => {\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { position, zoom, pitch, bearing, fit_bounds, traffic_points, viewPoint } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<Map\r\n\t\t\t\tstyle='style.json'  // eslint-disable-line react/style-prop-object\r\n\t\t\t\tcenter={position}\r\n\t\t\t\tzoom={zoom}\r\n\t\t\t\tmaxZoom={17}\r\n\t\t\t\tpitch={pitch}\r\n\t\t\t\tbearing={bearing}\r\n\t\t\t\tfitBounds={fit_bounds}\r\n\t\t\t\tcontainerStyle={{ top: 0, bottom: 0, right: 0, left: 0, height: '100vh', width: '100vw', position: 'absolute' }}\r\n\t\t\t>\r\n\t\t\t\t<Layer\r\n\t\t\t\t\ttype=\"circle\"\r\n\t\t\t\t\tid=\"traffic-points-layer\"\r\n\t\t\t\t\tlayout={{\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tpaint={{\r\n\t\t\t\t\t\t'circle-radius': ['/', ['number', ['get', 'all_motor_vehicles'], 5000], 1000],\r\n\t\t\t\t\t\t'circle-opacity': 0.5,\r\n\t\t\t\t\t\t'circle-color': 'rgb(171, 72, 33)'\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{traffic_points.map(tp => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Feature\r\n\t\t\t\t\t\t\t\tkey={tp.count_point_id}\r\n\t\t\t\t\t\t\t\tcoordinates={[tp.longitude, tp.latitude]}\r\n\t\t\t\t\t\t\t\tproperties={tp}\r\n\t\t\t\t\t\t\t\tonClick={(mapWithEvt) => { viewPoint(mapWithEvt) }}\r\n\t\t\t\t\t\t\t/>)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</Layer>\r\n\t\t\t\t<ZoomControl position=\"bottom-right\" />\r\n\t\t\t</Map>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nTrafficMap.propTypes = {\r\n}\r\n\r\nexport default TrafficMap;","// Axios for making requests\r\nimport axios from 'axios';\r\n\r\nimport * as MapboxGL from 'mapbox-gl';\r\n\r\nconst config = require('./config.json');\r\n\r\nexport function getLocalAuthorities(callback) {\r\n    axios.get(config.cors_proxy + ((config.api + 'local-authorities')), { headers: { origin: 'localhost' } })\r\n        .then(response => {\r\n            if (response && response.data && response.data.data) {\r\n                callback(response.data.data);\r\n            } else {\r\n                callback([]);\r\n            }\r\n        })\r\n        .catch(err => {\r\n            callback([])\r\n        });\r\n}\r\n\r\nexport function getAnnualAverageDailyFlowByAuthorityAndYear(authority, year, callback) {\r\n    axios.get(config.cors_proxy + config.api + 'average-annual-daily-flow-by-direction?filter[local_authority_id]=' + authority + '&filter[year]=' + year)\r\n        .then(response => {\r\n            if (response && response.data && response.data.data) {\r\n\r\n                // Get the overall bounds\r\n                let coords = [];\r\n                response.data.data.forEach(tp => {\r\n                    coords.push([tp.longitude, tp.latitude]);\r\n                });\r\n                let bounds = coords.reduce(function (bounds, coord) {\r\n                    return bounds.extend(coord);\r\n                }, new MapboxGL.LngLatBounds(coords[0], coords[0]));\r\n                const sw = bounds.getSouthWest();\r\n                const ne = bounds.getNorthEast();\r\n\r\n                // Get some totals\r\n                let totals = {\r\n                    all_hgvs: 0,\r\n                    all_motor_vehicles: 0,\r\n                    buses_and_coaches: 0,\r\n                    cars_and_taxis: 0,\r\n                    pedal_cycles: 0,\r\n                    two_wheeled_motor_vehicles: 0\r\n                }\r\n\r\n                response.data.data.forEach(tp => {\r\n                    totals.all_hgvs = totals.all_hgvs + tp.all_hgvs;\r\n                    totals.all_motor_vehicles = totals.all_motor_vehicles + tp.all_motor_vehicles;\r\n                    totals.buses_and_coaches = totals.buses_and_coaches + tp.buses_and_coaches;\r\n                    totals.cars_and_taxis = totals.cars_and_taxis + tp.cars_and_taxis;\r\n                    totals.pedal_cycles = totals.pedal_cycles + tp.pedal_cycles;\r\n                    totals.two_wheeled_motor_vehicles = totals.two_wheeled_motor_vehicles + tp.two_wheeled_motor_vehicles;\r\n                });\r\n\r\n                let percentages = {\r\n                    all_hgvs: Math.round((totals.all_hgvs / (totals.all_motor_vehicles + totals.pedal_cycles)) * 100),\r\n                    buses_and_coaches: Math.round((totals.buses_and_coaches / (totals.all_motor_vehicles + totals.pedal_cycles)) * 100),\r\n                    cars_and_taxis: Math.round((totals.cars_and_taxis / (totals.all_motor_vehicles + totals.pedal_cycles)) * 100),\r\n                    pedal_cycles: Math.round((totals.pedal_cycles / (totals.all_motor_vehicles + totals.pedal_cycles)) * 100),\r\n                    two_wheeled_motor_vehicles: Math.round((totals.two_wheeled_motor_vehicles / (totals.all_motor_vehicles + totals.pedal_cycles)) * 100),\r\n                }\r\n\r\n                callback({ data: response.data.data, bounds: [[sw.lng, sw.lat], [ne.lng, ne.lat]], percentages: percentages });\r\n            } else {\r\n                callback({ data: [], bounds: undefined, percentages: {} });\r\n            }\r\n        })\r\n        .catch(err => {\r\n            callback({ data: [], bounds: undefined, percentages: {} });\r\n        });\r\n}\r\n","// React\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Material UI\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\n\r\n// MUI Style\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport blueGrey from '@material-ui/core/colors/blueGrey';\r\nimport { MuiThemeProvider, createMuiTheme, withStyles } from '@material-ui/core/styles';\r\n\r\nimport Details from './Details';\r\nimport Sidebar from './Sidebar';\r\nimport TrafficMap from './TrafficMap';\r\n\r\nimport * as trafficHelper from './helpers/traffic';\r\n\r\nconst drawerWidth = 400;\r\n\r\nconst theme = createMuiTheme({\r\n\tpalette: {\r\n\t\tprimary: blue,\r\n\t\tsecondary: blueGrey\r\n\t},\r\n\toverrides: {\r\n\t\tMuiButton: {\r\n\t\t\ttext: {\r\n\t\t\t\ttextTransform: 'inherit'\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\nconst styles = theme => ({\r\n\troot: {\r\n\t\tdisplay: 'flex'\r\n\t},\r\n\tcontent: {\r\n\t\tflexGrow: 1,\r\n\t\tpadding: theme.spacing(3)\r\n\t},\r\n\tdrawerPaper: {\r\n\t\twidth: drawerWidth,\r\n\t\tpadding: 15\r\n\t}\r\n});\r\n\r\nclass App extends Component {\r\n\tstate = {\r\n\t\t// screen setup\r\n\t\tinfo_dialog_open: false,\r\n\t\t// map setup\r\n\t\tfit_bounds: null,\r\n\t\tposition: [-2.1000, 53.6138],\r\n\t\tzoom: [7],\r\n\t\tpitch: [0],\r\n\t\tbearing: [0],\r\n\t\tdistance: 1609,\r\n\t\tcurrent_position: [],\r\n\t\t// data\r\n\t\tauthorities: [],\r\n\t\tselected_authority: '',\r\n\t\tselected_year: 2018,\r\n\t\ttraffic_points: [],\r\n\t\ttraffic_point: {},\r\n\t\tpercentages: {}\r\n\t};\r\n\r\n\tcomponentDidMount = () => {\r\n\t\tthis.setState({});\r\n\t\tthis.getAuthorities();\r\n\t}\r\n\r\n\topenDetails = (traffic_point) => this.setState({ info_dialog_open: true, traffic_point: traffic_point })\r\n\tcloseDetails = () => this.setState({ info_dialog_open: false })\r\n\r\n\tchangeYear = (year) => {\r\n\t\tthis.setState({ selected_year: year });\r\n\t}\r\n\r\n\tchangeAuthority = (id) => {\r\n\t\tthis.setState({ selected_authority: id });\r\n\t}\r\n\r\n\tgetAverageDailyFlow = () => {\r\n\t\tif (this.state.selected_year !== '' && this.state.selected_authority !== '') {\r\n\t\t\ttrafficHelper.getAnnualAverageDailyFlowByAuthorityAndYear(this.state.selected_authority, this.state.selected_year, data => {\r\n\t\t\t\tthis.setState({ traffic_points: data.data, fit_bounds: data.bounds, percentages: data.percentages });\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tviewPoint = (mapWithEvt) => {\r\n\t\tthis.openDetails(mapWithEvt.feature.properties);\r\n\t}\r\n\r\n\tgetAuthorities = () => {\r\n\t\ttrafficHelper.getLocalAuthorities(auths => {\r\n\t\t\tif (auths.length > 0) {\r\n\t\t\t\tthis.setState({ authorities: auths });\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\t\treturn (\r\n\t\t\t<MuiThemeProvider theme={theme}>\r\n\t\t\t\t<div className={classes.root}>\r\n\t\t\t\t\t<CssBaseline />\r\n\t\t\t\t\t<nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n\t\t\t\t\t\t<Drawer\r\n\t\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\t\tpaper: classes.drawerPaper,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tvariant=\"permanent\"\r\n\t\t\t\t\t\t\topen\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Sidebar\r\n\t\t\t\t\t\t\t\tauthorities={this.state.authorities}\r\n\t\t\t\t\t\t\t\tselected_authority={this.state.selected_authority}\r\n\t\t\t\t\t\t\t\tselected_year={this.state.selected_year}\r\n\t\t\t\t\t\t\t\tgetAverageDailyFlow={this.getAverageDailyFlow}\r\n\t\t\t\t\t\t\t\tchangeYear={this.changeYear}\r\n\t\t\t\t\t\t\t\tchangeAuthority={this.changeAuthority}\r\n\t\t\t\t\t\t\t\ttraffic_points={this.state.traffic_points}\r\n\t\t\t\t\t\t\t\tpercentages={this.state.percentages}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Drawer>\r\n\t\t\t\t\t</nav>\r\n\t\t\t\t\t<main className={classes.content}>\r\n\t\t\t\t\t\t<div className={classes.toolbar} />\r\n\t\t\t\t\t\t<TrafficMap\r\n\t\t\t\t\t\t\tbearing={this.state.bearing}\r\n\t\t\t\t\t\t\tfit_bounds={this.state.fit_bounds}\r\n\t\t\t\t\t\t\tpitch={this.state.pitch}\r\n\t\t\t\t\t\t\tposition={this.state.position}\r\n\t\t\t\t\t\t\tcurrent_position={this.state.current_position}\r\n\t\t\t\t\t\t\tzoom={this.state.zoom}\r\n\t\t\t\t\t\t\ttraffic_points={this.state.traffic_points}\r\n\t\t\t\t\t\t\tviewPoint={this.viewPoint}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</main>\r\n\t\t\t\t\t<Details\r\n\t\t\t\t\t\topen={this.state.info_dialog_open}\r\n\t\t\t\t\t\tclose={() => this.closeDetails()}\r\n\t\t\t\t\t\ttraffic_point={this.state.traffic_point}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</MuiThemeProvider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nApp.propTypes = {\r\n\tclasses: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n// Our app entry point\r\nimport App from './App';\r\n\r\n// Service worker for PWA behaviour\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}